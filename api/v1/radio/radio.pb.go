// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stellarstation/api/v1/radio/radio.proto

package radio

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Type of modulation. Modulation is the process of converting binary data (0's and 1's) to
// an analog wave for use in radio communication.
type Modulation int32

const (
	// Frequency Shift Keying. https://en.wikipedia.org/wiki/Frequency-shift_keying
	Modulation_FSK Modulation = 0
	// Audio Frequency Shift Keying. https://en.wikipedia.org/wiki/Frequency-shift_keying#Audio_FSK
	Modulation_AFSK Modulation = 1
	// Binary Phase Shift Keying. https://en.wikipedia.org/wiki/Phase-shift_keying#Binary_phase-shift_keying_(BPSK)
	Modulation_BPSK Modulation = 2
)

var Modulation_name = map[int32]string{
	0: "FSK",
	1: "AFSK",
	2: "BPSK",
}

var Modulation_value = map[string]int32{
	"FSK":  0,
	"AFSK": 1,
	"BPSK": 2,
}

func (x Modulation) String() string {
	return proto.EnumName(Modulation_name, int32(x))
}

func (Modulation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_66895b3707e74834, []int{0}
}

// A radio device for RF communication. Usually, a satellite will have one or more radio devices for
// communicating with the ground and a ground station will have one or more radio devices for
// communicating with the satellite. Such devices may not actually correspond to actual hardware
// devices, i.e., in the case of Software Defined Radio (SDR).
type RadioDeviceConfiguration struct {
	// The center frequency of the device, in Hz.
	CenterFrequencyHz uint64 `protobuf:"varint,1,opt,name=center_frequency_hz,json=centerFrequencyHz,proto3" json:"center_frequency_hz,omitempty"`
	// The type of modulation used by this radio device.
	Modulation Modulation `protobuf:"varint,2,opt,name=modulation,proto3,enum=stellarstation.api.v1.radio.Modulation" json:"modulation,omitempty"`
	// The bitrate used during modulation.
	Bitrate uint64 `protobuf:"varint,3,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	// The protocol used by this device when doing RF communication. If unset, the device is only
	// demodulating / modulating without applying any higher-level communication protocol.
	Protocol             *CommunicationProtocol `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RadioDeviceConfiguration) Reset()         { *m = RadioDeviceConfiguration{} }
func (m *RadioDeviceConfiguration) String() string { return proto.CompactTextString(m) }
func (*RadioDeviceConfiguration) ProtoMessage()    {}
func (*RadioDeviceConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_66895b3707e74834, []int{0}
}

func (m *RadioDeviceConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadioDeviceConfiguration.Unmarshal(m, b)
}
func (m *RadioDeviceConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadioDeviceConfiguration.Marshal(b, m, deterministic)
}
func (m *RadioDeviceConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadioDeviceConfiguration.Merge(m, src)
}
func (m *RadioDeviceConfiguration) XXX_Size() int {
	return xxx_messageInfo_RadioDeviceConfiguration.Size(m)
}
func (m *RadioDeviceConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_RadioDeviceConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_RadioDeviceConfiguration proto.InternalMessageInfo

func (m *RadioDeviceConfiguration) GetCenterFrequencyHz() uint64 {
	if m != nil {
		return m.CenterFrequencyHz
	}
	return 0
}

func (m *RadioDeviceConfiguration) GetModulation() Modulation {
	if m != nil {
		return m.Modulation
	}
	return Modulation_FSK
}

func (m *RadioDeviceConfiguration) GetBitrate() uint64 {
	if m != nil {
		return m.Bitrate
	}
	return 0
}

func (m *RadioDeviceConfiguration) GetProtocol() *CommunicationProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

// A communication protocol used with a radio device. These must contain all the parameters
// needed to configure the device for use either in transmission or reception.
type CommunicationProtocol struct {
	// The type of framing used for communication on the device. If `bitstream`, the device is only
	// demodulating / modulating without applying any higher-level framing (i.e., packeting) protocol.
	//
	// Types that are valid to be assigned to Framing:
	//	*CommunicationProtocol_Ax25
	Framing              isCommunicationProtocol_Framing `protobuf_oneof:"Framing"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CommunicationProtocol) Reset()         { *m = CommunicationProtocol{} }
func (m *CommunicationProtocol) String() string { return proto.CompactTextString(m) }
func (*CommunicationProtocol) ProtoMessage()    {}
func (*CommunicationProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_66895b3707e74834, []int{1}
}

func (m *CommunicationProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicationProtocol.Unmarshal(m, b)
}
func (m *CommunicationProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicationProtocol.Marshal(b, m, deterministic)
}
func (m *CommunicationProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicationProtocol.Merge(m, src)
}
func (m *CommunicationProtocol) XXX_Size() int {
	return xxx_messageInfo_CommunicationProtocol.Size(m)
}
func (m *CommunicationProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicationProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicationProtocol proto.InternalMessageInfo

type isCommunicationProtocol_Framing interface {
	isCommunicationProtocol_Framing()
}

type CommunicationProtocol_Ax25 struct {
	Ax25 *AX25 `protobuf:"bytes,1,opt,name=ax25,proto3,oneof"`
}

func (*CommunicationProtocol_Ax25) isCommunicationProtocol_Framing() {}

func (m *CommunicationProtocol) GetFraming() isCommunicationProtocol_Framing {
	if m != nil {
		return m.Framing
	}
	return nil
}

func (m *CommunicationProtocol) GetAx25() *AX25 {
	if x, ok := m.GetFraming().(*CommunicationProtocol_Ax25); ok {
		return x.Ax25
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CommunicationProtocol) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CommunicationProtocol_OneofMarshaler, _CommunicationProtocol_OneofUnmarshaler, _CommunicationProtocol_OneofSizer, []interface{}{
		(*CommunicationProtocol_Ax25)(nil),
	}
}

func _CommunicationProtocol_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CommunicationProtocol)
	// Framing
	switch x := m.Framing.(type) {
	case *CommunicationProtocol_Ax25:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ax25); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CommunicationProtocol.Framing has unexpected type %T", x)
	}
	return nil
}

func _CommunicationProtocol_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CommunicationProtocol)
	switch tag {
	case 1: // Framing.ax25
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AX25)
		err := b.DecodeMessage(msg)
		m.Framing = &CommunicationProtocol_Ax25{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CommunicationProtocol_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CommunicationProtocol)
	// Framing
	switch x := m.Framing.(type) {
	case *CommunicationProtocol_Ax25:
		s := proto.Size(x.Ax25)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Communication of a stream of bits with no framing defined.
type BitStream struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BitStream) Reset()         { *m = BitStream{} }
func (m *BitStream) String() string { return proto.CompactTextString(m) }
func (*BitStream) ProtoMessage()    {}
func (*BitStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_66895b3707e74834, []int{2}
}

func (m *BitStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitStream.Unmarshal(m, b)
}
func (m *BitStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitStream.Marshal(b, m, deterministic)
}
func (m *BitStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitStream.Merge(m, src)
}
func (m *BitStream) XXX_Size() int {
	return xxx_messageInfo_BitStream.Size(m)
}
func (m *BitStream) XXX_DiscardUnknown() {
	xxx_messageInfo_BitStream.DiscardUnknown(m)
}

var xxx_messageInfo_BitStream proto.InternalMessageInfo

// PACKET communication based on AX.25. https://www.sigidwiki.com/wiki/PACKET.
type AX25 struct {
	// Whether or not G3RUH scrambling is used.
	G3Ruh bool `protobuf:"varint,1,opt,name=g3ruh,proto3" json:"g3ruh,omitempty"`
	// Destination callsign.
	DestinationCallsign string `protobuf:"bytes,2,opt,name=destination_callsign,json=destinationCallsign,proto3" json:"destination_callsign,omitempty"`
	// Destination SSID.
	DestinationSsid uint32 `protobuf:"varint,3,opt,name=destination_ssid,json=destinationSsid,proto3" json:"destination_ssid,omitempty"`
	// Source callsign.
	SourceCallsign string `protobuf:"bytes,4,opt,name=source_callsign,json=sourceCallsign,proto3" json:"source_callsign,omitempty"`
	// Source SSID.
	SourceSsid           uint32   `protobuf:"varint,5,opt,name=source_ssid,json=sourceSsid,proto3" json:"source_ssid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AX25) Reset()         { *m = AX25{} }
func (m *AX25) String() string { return proto.CompactTextString(m) }
func (*AX25) ProtoMessage()    {}
func (*AX25) Descriptor() ([]byte, []int) {
	return fileDescriptor_66895b3707e74834, []int{3}
}

func (m *AX25) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AX25.Unmarshal(m, b)
}
func (m *AX25) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AX25.Marshal(b, m, deterministic)
}
func (m *AX25) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AX25.Merge(m, src)
}
func (m *AX25) XXX_Size() int {
	return xxx_messageInfo_AX25.Size(m)
}
func (m *AX25) XXX_DiscardUnknown() {
	xxx_messageInfo_AX25.DiscardUnknown(m)
}

var xxx_messageInfo_AX25 proto.InternalMessageInfo

func (m *AX25) GetG3Ruh() bool {
	if m != nil {
		return m.G3Ruh
	}
	return false
}

func (m *AX25) GetDestinationCallsign() string {
	if m != nil {
		return m.DestinationCallsign
	}
	return ""
}

func (m *AX25) GetDestinationSsid() uint32 {
	if m != nil {
		return m.DestinationSsid
	}
	return 0
}

func (m *AX25) GetSourceCallsign() string {
	if m != nil {
		return m.SourceCallsign
	}
	return ""
}

func (m *AX25) GetSourceSsid() uint32 {
	if m != nil {
		return m.SourceSsid
	}
	return 0
}

func init() {
	proto.RegisterEnum("stellarstation.api.v1.radio.Modulation", Modulation_name, Modulation_value)
	proto.RegisterType((*RadioDeviceConfiguration)(nil), "stellarstation.api.v1.radio.RadioDeviceConfiguration")
	proto.RegisterType((*CommunicationProtocol)(nil), "stellarstation.api.v1.radio.CommunicationProtocol")
	proto.RegisterType((*BitStream)(nil), "stellarstation.api.v1.radio.BitStream")
	proto.RegisterType((*AX25)(nil), "stellarstation.api.v1.radio.AX25")
}

func init() {
	proto.RegisterFile("stellarstation/api/v1/radio/radio.proto", fileDescriptor_66895b3707e74834)
}

var fileDescriptor_66895b3707e74834 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x41, 0x6b, 0xdb, 0x4e,
	0x10, 0xc5, 0xa3, 0x44, 0xf9, 0xdb, 0x1e, 0xf3, 0x4f, 0xdc, 0x4d, 0x0a, 0x82, 0x1e, 0xe2, 0xfa,
	0x62, 0xa7, 0x50, 0x09, 0x2b, 0x84, 0xf6, 0x1a, 0xb9, 0xb8, 0x81, 0xd0, 0x62, 0xe4, 0x4b, 0x69,
	0x0f, 0x66, 0xbd, 0x5a, 0xcb, 0x03, 0xd2, 0xae, 0xbb, 0x5a, 0x99, 0x36, 0x9f, 0xaf, 0x5f, 0xab,
	0x50, 0x34, 0x72, 0x1c, 0x17, 0x8a, 0x2e, 0x62, 0x34, 0xef, 0xbd, 0xdf, 0xb0, 0xb3, 0x0b, 0xc3,
	0xc2, 0xca, 0x2c, 0xe3, 0xa6, 0xb0, 0xdc, 0xa2, 0x56, 0x01, 0xdf, 0x60, 0xb0, 0x1d, 0x07, 0x86,
	0x27, 0xa8, 0xeb, 0xaf, 0xbf, 0x31, 0xda, 0x6a, 0xf6, 0xea, 0x6f, 0xa3, 0xcf, 0x37, 0xe8, 0x6f,
	0xc7, 0x3e, 0x59, 0x06, 0xbf, 0x1d, 0xf0, 0xe2, 0xaa, 0xfa, 0x20, 0xb7, 0x28, 0xe4, 0x44, 0xab,
	0x15, 0xa6, 0xa5, 0x21, 0x27, 0xf3, 0xe1, 0x42, 0x48, 0x65, 0xa5, 0x59, 0xac, 0x8c, 0xfc, 0x5e,
	0x4a, 0x25, 0x7e, 0x2e, 0xd6, 0x8f, 0x9e, 0xd3, 0x77, 0x46, 0x6e, 0xfc, 0xa2, 0x96, 0xa6, 0x4f,
	0xca, 0xfd, 0x23, 0xfb, 0x08, 0x90, 0xeb, 0xa4, 0xcc, 0x28, 0xed, 0x1d, 0xf7, 0x9d, 0xd1, 0x59,
	0x38, 0xf4, 0x1b, 0xc6, 0xfb, 0x9f, 0xf6, 0xf6, 0xf8, 0x20, 0xca, 0x3c, 0x68, 0x2d, 0xd1, 0x1a,
	0x6e, 0xa5, 0x77, 0x42, 0xc3, 0x9e, 0x7e, 0xd9, 0x67, 0x68, 0xd3, 0xa9, 0x84, 0xce, 0x3c, 0xb7,
	0xef, 0x8c, 0xba, 0x61, 0xd8, 0x38, 0x60, 0xa2, 0xf3, 0xbc, 0x54, 0x28, 0x48, 0x9a, 0xed, 0x92,
	0xf1, 0x9e, 0x31, 0xf8, 0x06, 0x2f, 0xff, 0x69, 0x61, 0xef, 0xc0, 0xe5, 0x3f, 0xc2, 0x5b, 0x3a,
	0x6c, 0x37, 0x7c, 0xdd, 0x38, 0xe4, 0xee, 0x4b, 0x78, 0x7b, 0x7f, 0x14, 0x53, 0x20, 0xea, 0x40,
	0x6b, 0x6a, 0x78, 0x8e, 0x2a, 0x1d, 0x74, 0xa1, 0x13, 0xa1, 0x9d, 0x5b, 0x23, 0x79, 0x3e, 0xf8,
	0xe5, 0x80, 0x5b, 0x19, 0xd9, 0x25, 0x9c, 0xa6, 0x37, 0xa6, 0x5c, 0x13, 0xba, 0x1d, 0xd7, 0x3f,
	0x6c, 0x0c, 0x97, 0x89, 0x2c, 0x2c, 0x2a, 0xe2, 0x2f, 0x04, 0xcf, 0xb2, 0x02, 0xd3, 0x7a, 0x8b,
	0x9d, 0xf8, 0xe2, 0x40, 0x9b, 0xec, 0x24, 0x76, 0x0d, 0xbd, 0xc3, 0x48, 0x51, 0x60, 0x42, 0xeb,
	0xfa, 0x3f, 0x3e, 0x3f, 0xe8, 0xcf, 0x0b, 0x4c, 0xd8, 0x10, 0xce, 0x0b, 0x5d, 0x1a, 0x21, 0x9f,
	0xc1, 0x2e, 0x81, 0xcf, 0xea, 0xf6, 0x9e, 0x79, 0x05, 0xdd, 0x9d, 0x91, 0x70, 0xa7, 0x84, 0x83,
	0xba, 0x55, 0x91, 0xde, 0x5c, 0x03, 0x3c, 0x5f, 0x1a, 0x6b, 0xc1, 0xc9, 0x74, 0xfe, 0xd0, 0x3b,
	0x62, 0x6d, 0x70, 0xef, 0xaa, 0xca, 0xa9, 0xaa, 0x68, 0x36, 0x7f, 0xe8, 0x1d, 0x47, 0x08, 0x57,
	0x42, 0xe7, 0x4d, 0x9b, 0x8b, 0x80, 0xde, 0x1e, 0x2d, 0x7d, 0xe6, 0x7c, 0x7d, 0x9f, 0xa2, 0x5d,
	0x97, 0x4b, 0x5f, 0xe8, 0x3c, 0x40, 0xb5, 0xd2, 0xbb, 0x24, 0x2a, 0x11, 0xa4, 0xfa, 0x6d, 0xc3,
	0x7b, 0x5f, 0xfe, 0x47, 0x17, 0x7a, 0xf3, 0x27, 0x00, 0x00, 0xff, 0xff, 0x11, 0xe6, 0x99, 0xbd,
	0x15, 0x03, 0x00, 0x00,
}
